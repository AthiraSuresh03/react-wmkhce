{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\athir\\\\Desktop\\\\Task-1\\\\react-wmkhce\\\\src\\\\App.js\";\nimport React from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Table builder!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Table should be build from the JSON provided in the file\", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \" src/dummy.json\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), \"User should be able to \", /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 30\n    }, this), \" a row and\", /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \" hide/view\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 53\n    }, this), \" a column. The table should be dynamic and column Name should be 'key' in the json. eg: this table will contain the columns:\", /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \" name, job, eid, age, place, country.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"Note: Json can have any key value pairs, we don't hardcode the keys\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [' ', \"The UI should contain a list of the columns and user should be able to toggle it to either show/hide.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"A table which is populated as per the result of the show/hide configuration.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","App"],"sources":["C:/Users/athir/Desktop/Task-1/react-wmkhce/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <h1>Create a Table builder!</h1>\r\n      <p>\r\n        Table should be build from the JSON provided in the file\r\n        <b> src/dummy.json</b>\r\n      </p>\r\n      User should be able to <b>delete</b> a row and<b> hide/view</b> a column.\r\n      The table should be dynamic and column Name should be 'key' in the json.\r\n      eg: this table will contain the columns:\r\n      <b> name, job, eid, age, place, country.</b>\r\n      <p>\r\n        <b>\r\n          Note: Json can have any key value pairs, we don't hardcode the keys{' '}\r\n        </b>\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          {' '}\r\n          The UI should contain a list of the columns and user should be able to\r\n          toggle it to either show/hide.\r\n        </li>\r\n        <li>\r\n          A table which is populated as per the result of the show/hide\r\n          configuration.\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC;AAErB,eAAe,SAASC,GAAG,GAAG;EAC5B,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgC,eAChC;MAAA,oFAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB;IAAA;MAAA;MAAA;MAAA;IAAA,QACpB,0CACmB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,6BAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,+IAG/D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA4C,eAC5C;MAAA,uBACE;QAAA,kFACsE,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACrE;MAAA;MAAA;MAAA;IAAA,QACF,eACJ;MAAA,wBACE;QAAA,WACG,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAGD,eACL;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGK;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,KA9BuBA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}